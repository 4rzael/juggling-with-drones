<?xml version="1.0"?>
<launch>
  <arg name="drone_uri" default="radio://0/80/2M/175DEADD"/>
  <arg name="namespace_input_manager" default="input_manager"/>
  <arg name="web_port" default="3000"/>
  <arg name="controller_id" default="0"/>
  <arg name="nb_drones" default="2"/>

  <group ns="$(arg namespace_input_manager)">
    <node pkg="juggling_phone_glove" type="run.js" name="phone_glove" args="-p $(arg web_port) --">
    </node>

    <node pkg="juggling_controller" type="Controller.py" name="controller">
      <param name="controller_id" value="$(arg controller_id)"/>
      <param name="nb_drones" value="$(arg nb_drones)"/>
    </node>

    <rosparam command="load" file="$(find bitcraze_lps_estimator)/data/anchor_pos.yaml" />

    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg drone_uri)" />
      <param name="tf_prefix" value="$(arg namespace_input_manager)" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt", "log_ranges"]
        genericLogTopicFrequencies: [30, 30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
        genericLogTopic_log_ranges_Variables: ["ranging.distance0", "ranging.distance1", "ranging.distance2", "ranging.distance3", "ranging.distance4", "ranging.distance5", "ranging.state"]
      </rosparam>
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen"/>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

    <node name="log_range" pkg="bitcraze_lps_estimator" type="log_range.py" />
  </group>
</launch>
